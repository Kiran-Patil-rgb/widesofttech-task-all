 *FUNCTION*
 *defination:
  in JavaScript, a function is a block of organized, reusable code designed to perform a specific task. Functions are fundamental to JavaScript programming for several reasons:
  1> Reusability:
  * Functions allow you to write a block of code once and execute it multiple times, avoiding redundant code and promoting efficiency.   
  2> Modularity:
  * They enable the division of a large program into smaller, manageable, and self-contained units, making the code easier to understand, debug, and maintain.
  3> Encapsulation:
  * Functions can encapsulate specific logic, hiding implementation details and providing a clear interface for interaction.
  4> Defining a Function:
    * Functions are typically defined using the function keyword, followed by a name, parentheses for parameters, and curly braces enclosing the function body.
    ex,
    function greet(name) {
  console.log("Hello, " + name + "!");
}
  5> Calling a Function:
 * To execute the code within a function, you "call" or "invoke" it by using its name followed by parentheses.
  If the function accepts parameters, you pass the corresponding arguments within the parentheses.
  ex,
  greet("Alice"); // Calls the greet function with "Alice" as the argument
   6> Parameters and Arguments:
 1> Parameters: These are placeholders defined in the function's declaration, representing the values the function expects to receive.
 2> Arguments: These are the actual values passed to the function when it is called.
    
 7>  Return Values:
  * Functions can optionally return a value using the return keyword. This value can then be used in other parts of the program.
  ex,
   function add(a, b) {
  return a + b;
}

let sum = add(5, 3); // sum will be 8

 8> Function Expressions and Arrow Functions:
  * Besides function declarations, JavaScript also supports function expressions (assigning an anonymous function to a variable) and arrow functions (a more concise syntax for defining functions).
  ex,
    // Function Expression
const multiply = function(x, y) {
  return x * y;
};

// Arrow Function
const subtract = (x, y) => x - y;